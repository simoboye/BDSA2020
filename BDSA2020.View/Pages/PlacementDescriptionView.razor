@page "/placementdescription"

@using Entities

@inject HttpClient httpClient


<div class="placement my-card">
    <div class = "frame">
        <div style="height: 30px;"></div>
    <h5>LEO Pharma</h5>
    <img src="https://www.bhrservice.dk/wp-content/uploads/2016/12/3-1.jpg" alt="">
    <p class = "description">Lorem, ipsum dolor sit amet consectetur adipisicing elit.
        Deleniti architecto itaque accusantium nulla tempora animi
        recusandae mollitia fugiat omnis error, magni eius accusamus
        corporis voluptatibus quisquam incidunt sunt modi tempore!</p>
        <div class="divider"></div>
        <ul class="description">
            <li>hours</li>
            <li>location</li>
            <li>salary</li>
        </ul>
        <div class="divider"></div>
        <div style="height: 20px;"></div>
        <div class = "btnPlacement">
            <a href="https://www.google.com">More</a>
        </div>
    </div>
    
    <div class = "btnApplyPlacement">
        <a href="mailto:Goolge.com">Apply Now</a>
    </div>
</div>

<p>PlacementDescription: @currentCount</p>
<button class="btn btn-primary" @onclick="DecrementCount">Back</button>
<button class="btn btn-primary" @onclick="IncrementCount">Next</button>

@if (students == null)
{
    <p><em>Loading...</em></p>
}
else
{    
    <p class= "applyDate"> Placement Description Duration: @(students[currentCount].MaxWorkingHours)/01-2021</p>
    <p class= "applyDate"> Days Remaining: @(DateTime.Now.ToShortDateString())</p>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Degree</th>
                <th>MaxWorkingHours</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var student in students)
            {
                <tr>
                    <td>@student.Id</td>
                    <td>@student.Degree</td>
                    <td>@student.MaxWorkingHours</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Student[] students;
    private int currentCount = 0;

    protected override async Task OnInitializedAsync()
    {
        students = await httpClient.GetFromJsonAsync<Student[]>("StudentRepository");
    }

     private void IncrementCount()
    {
        currentCount++;
    }
    private void DecrementCount()
    {
        currentCount--;
    }
}