@page "/placementdescription"

@using BDSA2020.Shared;
@inject HttpClient httpClient
@inject IJSRuntime JS;





@if (placementDescriptions == null)
{
    <p><em>Loading...</em></p>
}
else 
{
    <div class="container placementDescriptionView">
        <div class="row">
            <div class="col-sm-3">

            </div>
            <div class="col-sm-6 placementContainer">
                <div class="placementCarousel">
                    @foreach (var item in placementDescriptions)
                    { 
                        <div class="card scroll-area placement">  
                            <img class="card-img-top" src="@item.Thumbnail" alt="">
                            <div class="card-body">
                                <h5 class="card-title">@item.Title</h5>
                                <p class="card-text">@item.Description</p>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"><b>Minimum workinghours: </b>@item.MinWorkingHours</li>
                                <li class="list-group-item"><b>Location: </b>@item.Location</li>
                                <li class="list-group-item"><b>Salary: </b>@item.MinSalary</li>
                                <li class="list-group-item"><b>Last apply date: </b>@GetLastApplyDate(item.Id -1)</li>
                                <li class="list-group-item"><b>Days remaining: </b>@DaysRemaining(item.Id -1)</li>
                            </ul>
                            <div class="card-body">
                                <button type="button" class="btn btn-primary btn-lg btn-block">Block level button</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="col-sm-3">

            </div>
        </div>
        <div class="d-flex flex-row buttonrow justify-content-center">
            <div class="p-2">
                <button type="button" onclick="goPrev()" class="btn btn-primary">Last</button>
            </div>
            <div class="p-2">
                <button type="button" class="btn btn-danger">Danger</button>
            </div>
            <div class="p-2">
                <button type="button" onclick="goNext()" class="btn btn-primary">Next</button>
            </div>
        </div>
    </div>
}

@code {

    private PlacementDescriptionDetailsDTO[] placementDescriptions;
        
     protected override async Task OnInitializedAsync()
    {
        placementDescriptions = await httpClient.GetFromJsonAsync<PlacementDescriptionDetailsDTO[]>("PlacementDescriptionRepository");
        
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //To run JS AFTER Blazor is done loading application
        await JS.InvokeAsync<string>("CardAnimation");
    }

        private string GetLastApplyDate(int id)
    {
        var applyDate = placementDescriptions[id].LastApplyDate;
        return applyDate.ToShortDateString();
    }

    private string DaysRemaining(int id)
    {
        var applyDate = placementDescriptions[id].LastApplyDate;
        DateTime today = DateTime.Now;
        var daysLeft = applyDate.Subtract(today);
        return (daysLeft.Days + 1).ToString(); 
    }
}
