@page "/companysettings"
@using BDSA2020.Shared
@using Entities
@using System.ComponentModel.DataAnnotations;
@inject HttpClient httpClient
@inject UserPropertiesService userPropertiesService;
@inject AuthenticationStateProvider AuthenticationStateProvider;
@using System.Security.Claims
@using Newtonsoft.Json;
@using System.Text


    <div class="container settingsView">
        <div class="row">
            <div class="col-12">
                <h1>Company settings</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <EditForm Model="@_dto" OnValidSubmit="@SaveCompanySettings">
                    <div class="form-group">
                        <label for="name">Company name:</label>
                        <InputText type="text" class="form-control" id="name" @bind-Value="@_dto.Name"/>
                    </div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </EditForm>
            </div>
        </div>
    </div>


@code {
    private String[] keywords;
    private CreateCompanyDTO _dto = new CreateCompanyDTO();

    private async Task SaveCompanySettings()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _dto.Id = Guid.Parse(user.FindFirst(c => c.Type == ClaimTypes.NameIdentifier)?.Value);

        Console.WriteLine("id " + _dto.Id);   
        Console.WriteLine("name " + _dto.Name);   

        var json = JsonConvert.SerializeObject(_dto);
        Console.WriteLine(json);   
        var data = new StringContent(json, Encoding.UTF8, "application/json");
        Console.WriteLine(data);   

        var response = await httpClient.PostAsync($"CompanyRepositoryâ€‹/create", data);
        var result = response.Content.ReadAsStringAsync().Result;
    }
}